/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 22.04.0 ] */
/* [wxMaxima: title   start ]
Harsh Meena (88028)

PRACTICAL -5 :
   [wxMaxima: title   end   ] */


/* [wxMaxima: title   start ]
5(a). Jacobi Method:
   [wxMaxima: title   end   ] */


/* [wxMaxima: comment start ]
Q1.) Solve the following system of linear equations using Gauss-Jacobi method:
2.x1 - 1.x2 + x3= -1,
1.x1 + 2.x2 – 1.x3 = 6,
1.x1 – 1.x2 + 2x3 = -3.

Ans.)Method 1:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $
x10 = x10 : 0.0 ;
x20 = x20 : 0.0 ;
x30 = x30 : 0.0 ;
print ( "i" , "" , "" , ' x_1 , "" , "" , "" , "" , "" , ' x_2 , "" , "" , "" , "" , ' x_3 , "" ) $
for i : 1 thru 10 do (
    x1 : ( -1 + x20 -  x30 ) / 2 ,
    x2 : ( 6 − x10 + x30 ) / 2 ,
    x3 : ( -3 −  x10 + x20 ) / 2 ,
    print ( i , "" , "" , x1 , "" , "" , x2 , "" , "" , "" , x3 , "" , "" ) ,
    fpprintprec : 8 ,
    x10 : x1 ,
    x20 : x2 ,
    x30 : x3  ) $
print ( "x1=" , x1 ) $
print ( "x2=" , x2 ) $
print ( "x3=" , x3 ) $

/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Method 2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $ ' n = n : 3 ;
' a = a : matrix ( [ 2 , -1 , 1 ] , [ 1 , 2 , − 1 ] , [ 1 , − 1 , 2 ] ) ;
' x = x : matrix ( [ 0 ] , [ 0 ] , [ 0 ] ) ;
' b = b : matrix ( [ -1 ] , [ 6 ] , [ -3 ] ) ;
print ( "i" , "" , "" , "" , "" , ' x_1 , "" , "" , "" , "" , "" , "" , ' x_2 , "" , "" , "" , "" , "" , "" , "" , "" , ' x_3 , "" ) $
for k : 1 thru 10 do (
    for i : 1 thru n do (
        y [ i ] : float ( ( b [ i ] − sum ( a [ i , j ] · x [ j ] , j , 1 , i − 1 ) − sum ( a [ i , j ] · x [ j ] , j , i + 1 , n ) ) / a [ i , i ] )
    ),
    for i : 1 thru n do (
        x [ i ] : y [ i ]
    ),
    print ( k , "" , "" , "" , x [ 1 ] , "" , "" , "" , x [ 2 ] , "" , "" , "" , x [ 3 ] ) 
) $
for p : 1 thru n do print ( ' x [ p ] = x [ p ] ) $ 
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Q2) Solve the system of equations
22.x1 + 6.x2 - 1.x3 = 85
6.x1 + 15.x2 + 2.x3 = 72
1.x1 + 1.x2 + 47.x3 = 110
using the Gauss elimination method.

Ans.) Method 1: 
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $
x10 = x10 : 0.0 ;
x20 = x20 : 0.0 ;
x30 = x30 : 0.0 ;
print ( "i" , "" , "" , ' x_1 , "" , "" , "" , "" , "" , ' x_2 , "" , "" , "" , "" , ' x_3 , "" ) $
for i : 1 thru 10 do (
    x1 : ( 85  -  6*x20  + x30 ) / 22 ,
    x2 : ( 72 − 6*x10 - 2*x30 ) / 15 ,
    x3 : ( 110 −  x10 - x20 ) / 47 ,
    print ( i , "" , "" , x1 , "" , "" , x2 , "" , "" , "" , x3 , "" , "" ) ,
    fpprintprec : 8 ,
    x10 : x1 ,
    x20 : x2 ,
    x30 : x3  
) $
print ( "x1=" , x1 ) $
print ( "x2=" , x2 ) $
print ( "x3=" , x3 ) $

/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Method 2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $ ' n = n : 3 ;
' a = a : matrix ( [ 27 , 6 , -1 ] , [ 6 , 15 , 2 ] , [ 1 , 1 , 54 ] ) ;
' x = x : matrix ( [ 0 ] , [ 0 ] , [ 0 ] ) ;
' b = b : matrix ( [ 85 ] , [ 72 ] , [ 110 ] ) ;
print ( "i" , "" , "" , "" , "" , ' x_1 , "" , "" , "" , "" , "" , "" , ' x_2 , "" , "" , "" , "" , "" , "" , "" , "" , ' x_3 , "" ) $
for k : 1 thru 10 do (
    for i : 1 thru n do (
        y [ i ] : float ( ( b [ i ] − sum ( a [ i , j ] · x [ j ] , j , 1 , i − 1 ) − sum ( a [ i , j ] · x [ j ] , j , i + 1 , n ) ) / a [ i , i ] )
    ),
    for i : 1 thru n do (
        x [ i ] : y [ i ]
    ),
    print ( k , "" , "" , "" , x [ 1 ] , "" , "" , "" , x [ 2 ] , "" , "" , "" , x [ 3 ] ) 
) $
for p : 1 thru n do print ( ' x [ p ] = x [ p ] ) $ 
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Q3.) Solve the following system of linear equations using Gauss-Jacobi method:
7.x1 - 3.x2 + x3= 4,
2.x1 + 4.x2 – 1.x3 = 6,
2.x1 + 1.x2 + 9x3 = -3.

Ans.)Method 1:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $
x10 = x10 : 0.0 ;
x20 = x20 : 0.0 ;
x30 = x30 : 0.0 ;
print ( "i" , "" , "" , ' x_1 , "" , "" , "" , "" , "" , ' x_2 , "" , "" , "" , "" , ' x_3 , "" ) $
for i : 1 thru 10 do (
    x1 : ( 4 + 3*x20 -  x30 ) / 7 ,
    x2 : ( 6 − 2*x10 + x30 ) / 4 ,
    x3 : ( -3 −  2*x10 - x20 ) / 9 ,
    print ( i , "" , "" , x1 , "" , "" , x2 , "" , "" , "" , x3 , "" , "" ) ,
    fpprintprec : 8 ,
    x10 : x1 ,
    x20 : x2 ,
    x30 : x3  
)$
print ( "x1=" , x1 ) $
print ( "x2=" , x2 ) $
print ( "x3=" , x3 ) $

/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Method 2:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $ ' n = n : 3 ;
' a = a : matrix ( [ 7 , -3 , 1 ] , [ 2 , 4 , − 1 ] , [ 2 ,  1 , 9 ] ) ;
' x = x : matrix ( [ 0 ] , [ 0 ] , [ 0 ] ) ;
' b = b : matrix ( [ 4 ] , [ 6 ] , [ -3 ] ) ;
print ( "i" , "" , "" , "" , "" , ' x_1 , "" , "" , "" , "" , "" , "" , ' x_2 , "" , "" , "" , "" , "" , "" , "" , "" , ' x_3 , "" ) $
for k : 1 thru 10 do (
    for i : 1 thru n do (
        y [ i ] : float ( ( b [ i ] − sum ( a [ i , j ] · x [ j ] , j , 1 , i − 1 ) − sum ( a [ i , j ] · x [ j ] , j , i + 1 , n ) ) / a [ i , i ] ) 
    ),
    for i : 1 thru n do (
        x [ i ] : y [ i ]
    ),
    print ( k , "" , "" , "" , x [ 1 ] , "" , "" , "" , x [ 2 ] , "" , "" , "" , x [ 3 ] ) 
)$
for p : 1 thru n do print ( ' x [ p ] = x [ p ] ) $ 
/* [wxMaxima: input   end   ] */


/* [wxMaxima: title   start ]
5(b). Gauss Seidel Method:
   [wxMaxima: title   end   ] */


/* [wxMaxima: comment start ]
Q1.Solve the following system of equations
2.x1 -  1.x2 + x3 = -1
1.x1 + 2x2 - 1.x3 = 4
1.x1 - 1.x2 + 2.x3 = -3
using the Gauss-Jordan method.

Ans.)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $
' n = n : 3 ;
' a = a : matrix ( [ 2 , − 1 , 1 ] , [ 1 , 2 , -1 ] , [ 1 , -1 ,  2 ] ) ;
' x = x : matrix ( [ 0 ] , [ 0 ] , [ 0 ] ) ; ' b = b : matrix ( [ -1 ] , [ 4 ] , [ − 3 ] ) ;
print ( "i" , "" , "" , "" , "" , "solution" ) $
for k : 1 thru 10 do (
    for i : 1 thru n do (
        x [ i ] : float ( ( b [ i ] − sum ( a [ i , j ] . x [ j ] , j , 1 , i − 1 ) − sum ( a [ i , j ] . x [ j ] , j , i + 1 , n ) ) / a [ i , i ] )
    ),
    print ( k , "" , "" , "" , ' x [ 1 ] = x [ 1 ] , ' x [ 2 ] = x [ 2 ] , ' x [ 3 ] = x [ 3 ] )
)$
for p : 1 thru n do print ( ' x [ p ] = x [ p ] ) $
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Q2.Solve the following system of equations
4.x1 -  3.x2 + 1x3 = 1
2.x1 + 2x2 + 1.x3 = 2
3.x1 - 2.x2 + 4.x3 = -3
using the Gauss-Jordan method.

Ans.)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $
' n = n : 3 ;
' a = a : matrix ( [ 4 , − 3 ,  1 ] , [ 2 , 2 , 1 ] , [ 3 , -2 , 4 ] ) ;
' x = x : matrix ( [ 0 ] , [ 0 ] , [ 0 ] ) ; ' b = b : matrix ( [ 1 ] , [ 2 ] , [ −3 ] ) ;
print ( "i" , "" , "" , "" , "" , "solution" ) $
for k : 1 thru 10 do (
    for i : 1 thru n do (
        x [ i ] : float ( ( b [ i ] − sum ( a [ i , j ] . x [ j ] , j , 1 , i − 1 ) − sum ( a [ i , j ] . x [ j ] , j , i + 1 , n ) ) / a [ i , i ] )
    ),
    print ( k , "" , "" , "" , ' x [ 1 ] = x [ 1 ] , ' x [ 2 ] = x [ 2 ] , ' x [ 3 ] = x [ 3 ] )
)$
for p : 1 thru n do print ( ' x [ p ] = x [ p ] ) $
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Q3.Solve the following system of equations
7.x1 +  1.x2 + x3 = 6
4.x1 - 2x2 + 2.x3 = 9
1.x1 + 1.x2 - 8.x3 = -4
using the Gauss-Jordan method.

Ans.)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
kill ( all ) $
' n = n : 3 ;
' a = a : matrix ( [ 7 ,  1 , 1 ] , [ 4 , -2 , 2 ] , [ 1 , 1 ,  -8 ] ) ;
' x = x : matrix ( [ 0 ] , [ 0 ] , [ 0 ] ) ; ' b = b : matrix ( [ 6 ] , [ 9 ] , [ − 4 ] ) ;
print ( "i" , "" , "" , "" , "" , "solution" ) $
for k : 1 thru 10 do (
    for i : 1 thru n do (
        x [ i ] : float ( ( b [ i ] − sum ( a [ i , j ] . x [ j ] , j , 1 , i − 1 ) − sum ( a [ i , j ] . x [ j ] , j , i + 1 , n ) ) / a [ i , i ] )
    ),
    print ( k , "" , "" , "" , ' x [ 1 ] = x [ 1 ] , ' x [ 2 ] = x [ 2 ] , ' x [ 3 ] = x [ 3 ] ) 
)$
for p : 1 thru n do print ( ' x [ p ] = x [ p ] ) $
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 22.04.0"$
